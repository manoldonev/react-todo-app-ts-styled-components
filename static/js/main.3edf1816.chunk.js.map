{"version":3,"sources":["services/filter.ts","services/mode.ts","context/todo.tsx","services/todo.ts","components/TodoList/TodoItem/TodoItem.tsx","components/TodoList/Header/Header.tsx","assets/add.svg","assets/search.svg","components/TodoList/ActionList/ActionList.tsx","components/TodoList/Filter/Filter.tsx","components/TodoList/Footer/Footer.tsx","components/TodoList/InputBox/InputBox.tsx","components/TodoList/SearchBox/SearchBox.tsx","components/TodoList/InputToggle/InputToggle.tsx","hooks/useKeyboardShortcut.ts","components/TodoList/Info/Info.tsx","components/TodoList/TodoList.tsx","components/TodoList/useTodoKeyboardShortcuts.ts","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["FilterMode","InputMode","ActionType","TodoStateContext","React","createContext","TodoDispatchContext","todoReducer","state","action","type","AddItem","nextId","items","length","toString","produce","draft","push","id","text","payload","done","SearchItem","query","ToggleItem","itemId","Error","itemToToggle","find","item","ToggleFilter","filterKey","filterMode","ToggleMode","inputMode","parseInt","All","TodoProvider","children","reducer","useReducer","Add","dispatch","Provider","value","useTodoDispatch","context","useContext","StyledTodoItem","styled","li","props","Wrapper","div","Checkbox","input","attrs","TodoItem","data","htmlFor","checked","onChange","StyledHeader","h1","Header","StyledList","ul","ActionItem","ImageButton","button","active","AddButton","AddIcon","SearchButton","SearchIcon","ActionList","mode","handleClick","e","currentTarget","onClick","Search","FilterList","FilterItem","Button","Filter","Object","entries","map","key","toggleFilter","StyledFooter","TextWrapper","span","Counter","Footer","count","StyledInput","InputBox","useState","setValue","placeholder","target","onKeyUp","code","trim","SearchBox","InputToggle","blacklistedTargets","keysReducer","Keydown","Keyup","Reset","useKeyboardShortcut","shortcutKeys","callback","lowerCaseKeys","toLowerCase","initialKeyMapping","reduce","keys","currentKey","setKeys","handleKeydown","useCallback","keydownEvent","repeat","lowerCaseKey","includes","tagName","handleKeyup","keyupEvent","useEffect","values","every","window","addEventListener","removeEventListener","Paragraph","p","Info","message","None","Section","section","TodoList","listContent","useTodoState","filteredItems","Done","filter","Active","queryString","search","itemCount","createModeKeys","Key","Shift","searchModeKeys","noInputModeKeys","Escape","useTodoKeyboardShortcuts","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3edf1816.chunk.js","sourcesContent":["import type { DataItem } from './todo';\n\nexport enum FilterMode {\n  All = 'all',\n  Active = 'active',\n  Done = 'done',\n}\n\nexport function filter(items: DataItem[], filterMode: FilterMode): DataItem[] {\n  if (filterMode === FilterMode.Done) {\n    return items.filter((item) => item.done);\n  }\n\n  if (filterMode === FilterMode.Active) {\n    return items.filter((item) => !item.done);\n  }\n\n  return [...items];\n}\n\nexport function search(items: DataItem[], query: string): DataItem[] {\n  const queryString = query.toLowerCase();\n  if (query === '') {\n    return [...items];\n  }\n\n  return items.filter((item) => item.text.toLowerCase().includes(queryString));\n}\n","enum InputMode {\n  None,\n  Search,\n  Add,\n}\n\nexport default InputMode;\n","import React, { useReducer } from 'react';\nimport produce from 'immer';\nimport { createNew, getAll } from '../services/todo';\nimport type { DataItem } from '../services/todo';\nimport { FilterMode } from '../services/filter';\nimport InputMode from '../services/mode';\n\ninterface Action {\n  type: ActionType;\n  payload: string;\n}\n\ninterface TodoState {\n  items: DataItem[];\n  filterMode: FilterMode;\n  inputMode: InputMode;\n  query: string;\n}\n\nconst enum ActionType {\n  AddItem,\n  SearchItem,\n  ToggleItem,\n  ToggleFilter,\n  ToggleMode,\n}\n\nconst TodoStateContext = React.createContext<TodoState | null>(null);\nconst TodoDispatchContext = React.createContext<React.Dispatch<Action> | null>(null);\n\nfunction todoReducer(state: TodoState, action: Action): TodoState {\n  switch (action.type) {\n    case ActionType.AddItem: {\n      const nextId = (state.items.length + 1).toString();\n\n      return produce(state, (draft: TodoState) => {\n        draft.items.push(createNew({ id: nextId, text: action.payload }));\n      });\n    }\n    case ActionType.SearchItem: {\n      return produce(state, (draft) => {\n        draft.query = action.payload;\n      });\n    }\n    case ActionType.ToggleItem: {\n      const itemId = action.payload;\n      if (!itemId) {\n        throw new Error(`${action.type}: item id not specified`);\n      }\n\n      return produce(state, (draft) => {\n        const itemToToggle = draft.items.find((item) => item.id === itemId);\n        if (itemToToggle == null) {\n          throw new Error(`${action.type}: item with id ${itemId} not found`);\n        }\n        itemToToggle.done = !itemToToggle.done;\n      });\n    }\n    case ActionType.ToggleFilter: {\n      const filterKey = action.payload;\n      if (!(filterKey in FilterMode)) {\n        throw new Error(`${action.type}: filter ${filterKey} not found`);\n      }\n\n      return produce(state, (draft) => {\n        draft.filterMode = FilterMode[filterKey as keyof typeof FilterMode];\n      });\n    }\n    case ActionType.ToggleMode: {\n      const inputMode = parseInt(action.payload, 10);\n      if (!(inputMode in InputMode)) {\n        throw new Error(`${action.type}: input mode ${inputMode} not recognized`);\n      }\n\n      return produce(state, (draft) => {\n        if (draft.inputMode !== inputMode) {\n          draft.inputMode = inputMode;\n          draft.query = '';\n          draft.filterMode = FilterMode.All;\n        }\n        return draft;\n      });\n    }\n    default: {\n      throw new Error(`Unhandled action type`);\n    }\n  }\n}\n\nfunction TodoProvider({\n  children,\n  reducer = todoReducer,\n}: {\n  children?: React.ReactNode;\n  reducer?: (state: TodoState, action: Action) => TodoState;\n}): JSX.Element {\n  const items = getAll();\n  const [state, dispatch] = useReducer(reducer, {\n    items,\n    filterMode: FilterMode.All,\n    inputMode: InputMode.Add,\n    query: '',\n  });\n\n  return (\n    <TodoStateContext.Provider value={state}>\n      <TodoDispatchContext.Provider value={dispatch}>{children}</TodoDispatchContext.Provider>\n    </TodoStateContext.Provider>\n  );\n}\n\nfunction useTodoState(): TodoState {\n  const context = React.useContext(TodoStateContext);\n  if (context == null) {\n    throw new Error('useTodoState must be within a TodoProvider');\n  }\n\n  return context;\n}\n\nfunction useTodoDispatch(): React.Dispatch<Action> {\n  const context = React.useContext(TodoDispatchContext);\n  if (context == null) {\n    throw new Error('useTodoDispatch must be within a TodoProvider');\n  }\n\n  return context;\n}\n\nexport { TodoProvider, useTodoState, useTodoDispatch, todoReducer, ActionType };\n","export interface DataItem {\n  id: string;\n  text: string;\n  done: boolean;\n}\n\nexport function getAll(): DataItem[] {\n  return [\n    {\n      id: '1',\n      text: 'Learn JavaScript',\n      done: true,\n    },\n    {\n      id: '2',\n      text: 'Learn React',\n      done: false,\n    },\n    {\n      id: '3',\n      text: 'Build a React app',\n      done: false,\n    },\n  ];\n}\n\nexport function createNew({ id, text }: { id: string; text: string }): DataItem {\n  return { id, text, done: false };\n}\n","import styled from 'styled-components/macro';\nimport { ActionType, useTodoDispatch } from '../../../context/todo';\nimport type { DataItem } from '../../../services/todo';\n\nconst StyledTodoItem = styled.li<{ done: boolean }>`\n  background-color: #fff;\n  border: none;\n  border-bottom: 0.1rem solid #ddd;\n\n  &:last-child {\n    border-bottom: none;\n  }\n\n  ${(props) =>\n    props.done &&\n    `\n    text-decoration: line-through;\n    color: #aaa;\n  `}\n`;\n\nconst Wrapper = styled.div`\n  margin: 1rem 0;\n  min-height: 2rem;\n`;\n\nconst Checkbox = styled.input.attrs({ type: 'checkbox' })`\n  margin-right: 0.4rem;\n`;\n\nexport default function TodoItem({ data }: { data: DataItem }): JSX.Element {\n  const { id, text, done } = data;\n  const dispatch = useTodoDispatch();\n\n  function handleChange(): void {\n    dispatch({ type: ActionType.ToggleItem, payload: id });\n  }\n\n  return (\n    <StyledTodoItem done={done}>\n      <Wrapper>\n        <label htmlFor={id}>\n          <Checkbox id={id} checked={done} onChange={handleChange} />\n          {text}\n        </label>\n      </Wrapper>\n    </StyledTodoItem>\n  );\n}\n","import styled from 'styled-components/macro';\n\nconst StyledHeader = styled.h1`\n  margin: 0;\n  padding-bottom: 2rem;\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nexport default function Header(): JSX.Element {\n  return <StyledHeader>Things to do</StyledHeader>;\n}\n","export default __webpack_public_path__ + \"static/media/add.5451be43.svg\";","export default __webpack_public_path__ + \"static/media/search.efb43b79.svg\";","import type { MouseEvent } from 'react';\nimport styled from 'styled-components/macro';\nimport { ActionType, useTodoDispatch } from '../../../context/todo';\nimport InputMode from '../../../services/mode';\nimport AddIcon from '../../../assets/add.svg';\nimport SearchIcon from '../../../assets/search.svg';\n\nconst StyledList = styled.ul`\n  flex: 0 0 auto;\n  list-style-type: none;\n  border-right: 0.1rem solid #ccc;\n  margin-right: 1.5rem;\n  padding: 0;\n`;\n\nconst ActionItem = styled.li`\n  display: inline;\n`;\n\nconst ImageButton = styled.button.attrs({ type: 'button' })<{ active: boolean }>`\n  border: 0;\n  margin: 0 0.8rem 0 0;\n  padding: 0.4rem 1.5rem;\n  height: calc(max(1.8rem, 18px));\n  width: calc(max(1.8rem, 18px));\n  cursor: pointer;\n  transition: 0.3s all;\n  opacity: 0.4;\n  ${(props) => props.active && `opacity: 1;`}\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst AddButton = styled(ImageButton)`\n  background: url('${AddIcon}') no-repeat center;\n`;\n\nconst SearchButton = styled(ImageButton)`\n  background: url('${SearchIcon}') no-repeat center;\n`;\n\nexport default function ActionList({ mode }: { mode: InputMode }): JSX.Element {\n  const dispatch = useTodoDispatch();\n\n  function handleClick(e: MouseEvent<HTMLButtonElement>): void {\n    dispatch({ type: ActionType.ToggleMode, payload: e.currentTarget.value });\n  }\n\n  return (\n    <StyledList>\n      <ActionItem>\n        <AddButton\n          onClick={handleClick}\n          active={mode === InputMode.Add}\n          value={InputMode.Add}\n          aria-label=\"Create Mode\"\n          data-testid=\"action-add\"\n        />\n      </ActionItem>\n      <ActionItem>\n        <SearchButton\n          onClick={handleClick}\n          active={mode === InputMode.Search}\n          value={InputMode.Search}\n          aria-label=\"Search Mode\"\n          data-testid=\"action-search\"\n        />\n      </ActionItem>\n    </StyledList>\n  );\n}\n","import styled from 'styled-components/macro';\nimport { ActionType, useTodoDispatch } from '../../../context/todo';\nimport { FilterMode } from '../../../services/filter';\n\nconst FilterList = styled.ul`\n  flex: 0 0 auto;\n  list-style-type: none;\n  padding-left: 0;\n`;\n\nconst FilterItem = styled.li`\n  display: inline;\n`;\n\nconst Button = styled.button.attrs({ type: 'button' })<{ active: boolean }>`\n  text-transform: capitalize;\n  background-color: transparent;\n  color: inherit;\n  margin: 0.3rem;\n  padding: 0.3rem 0.7rem;\n  text-decoration: none;\n  border: 0.1rem solid transparent;\n  border-radius: 0.3rem;\n\n  &:hover {\n    border-color: rgba(175, 47, 47, 0.1);\n  }\n\n  ${(props) =>\n    props.active &&\n    `\n    border-color: rgba(175, 47, 47, 0.2);\n  `}\n`;\n\nexport default function Filter({ mode }: { mode: FilterMode }): JSX.Element {\n  const dispatch = useTodoDispatch();\n\n  function toggleFilter(key: string): void {\n    dispatch({ type: ActionType.ToggleFilter, payload: key });\n  }\n\n  return (\n    <FilterList>\n      {Object.entries(FilterMode).map(([key, value]) => (\n        <FilterItem key={key}>\n          <Button active={value === mode} onClick={() => toggleFilter(key)}>\n            {value}\n          </Button>\n        </FilterItem>\n      ))}\n    </FilterList>\n  );\n}\n","import styled from 'styled-components/macro';\nimport type { FilterMode } from '../../../services/filter';\nimport type InputMode from '../../../services/mode';\nimport ActionList from '../ActionList';\nimport Filter from '../Filter';\n\nconst StyledFooter = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: baseline;\n  border-top: 0.1rem solid #ddd;\n  background-color: #f4fce8;\n  margin: 0 -2rem -1rem -2rem;\n  padding: 0 2rem;\n  color: #707070;\n`;\n\nconst TextWrapper = styled.span`\n  margin-right: auto;\n`;\n\nconst Counter = styled.span`\n  font-weight: bold;\n`;\n\nexport default function Footer({\n  count,\n  filterMode,\n  inputMode,\n}: {\n  count: number;\n  filterMode: FilterMode;\n  inputMode: InputMode;\n}): JSX.Element {\n  return (\n    <StyledFooter>\n      <ActionList mode={inputMode} />\n      <TextWrapper data-testid=\"counter\">\n        <Counter>{count}</Counter>\n        {' items left'}\n      </TextWrapper>\n      <Filter mode={filterMode} />\n    </StyledFooter>\n  );\n}\n","import type { KeyboardEvent } from 'react';\nimport { useState } from 'react';\nimport styled from 'styled-components/macro';\nimport { ActionType, useTodoDispatch } from '../../../context/todo';\n\nexport const StyledInput = styled.input.attrs({\n  type: 'text',\n})`\n  display: block;\n  width: 100%;\n  height: 3.4rem;\n  padding: 0.6rem 1.2rem;\n  font-size: 1.4rem;\n  line-height: 1.42857143;\n  color: #555;\n  background-color: #fff;\n  border: 1px solid #ccc;\n`;\n\nexport default function InputBox(): JSX.Element {\n  const [value, setValue] = useState('');\n  const dispatch = useTodoDispatch();\n\n  function handleKeyUp(e: KeyboardEvent<HTMLInputElement>): void {\n    if (e.code === 'Enter') {\n      dispatch({ type: ActionType.AddItem, payload: value.trim() });\n      setValue('');\n    }\n  }\n\n  // prettier-ignore\n  return (\n    <StyledInput\n      placeholder=\"Add New\"\n      value={value}\n      onChange={(e) => setValue(e.target.value)}\n      onKeyUp={handleKeyUp}\n    />\n  );\n}\n","import type { ChangeEvent } from 'react';\nimport { ActionType, useTodoDispatch } from '../../../context/todo';\nimport { StyledInput } from '../InputBox';\n\nexport default function SearchBox({ query }: { query: string }): JSX.Element {\n  const dispatch = useTodoDispatch();\n\n  function handleChange(e: ChangeEvent<HTMLInputElement>): void {\n    const { value } = e.target;\n    dispatch({ type: ActionType.SearchItem, payload: value });\n  }\n\n  return <StyledInput placeholder=\"Search\" value={query} onChange={handleChange} />;\n}\n","import InputMode from '../../../services/mode';\nimport InputBox from '../InputBox';\nimport SearchBox from '../SearchBox';\n\nexport default function InputToggle({ mode, query }: { mode: InputMode; query: string }): JSX.Element | null {\n  switch (mode) {\n    case InputMode.Add: {\n      return <InputBox />;\n    }\n    case InputMode.Search: {\n      return <SearchBox query={query} />;\n    }\n    default: {\n      return null;\n    }\n  }\n}\n","import produce from 'immer';\nimport { useReducer, useCallback, useEffect } from 'react';\n\nenum ActionType {\n  Keydown,\n  Keyup,\n  Reset,\n}\n\ninterface Action {\n  type: ActionType;\n  key?: string;\n  payload?: KeyMapping;\n}\n\ninterface KeyMapping {\n  [key: string]: boolean;\n}\n\nconst blacklistedTargets = ['input', 'textarea'];\n\nfunction useKeyboardShortcut(shortcutKeys: string[], callback: (keys: KeyMapping) => void): void {\n  if (!shortcutKeys.length) {\n    throw new Error(\n      'The first parameter to `useKeyboardShortcut` must contain at least one `KeyboardEvent.key` string.',\n    );\n  }\n\n  const lowerCaseKeys = shortcutKeys.map((key) => key.toLowerCase());\n  const initialKeyMapping = lowerCaseKeys.reduce<KeyMapping>((keys, currentKey) => {\n    keys[currentKey] = false;\n    return keys;\n  }, {});\n\n  const [keys, setKeys] = useReducer(keysReducer, initialKeyMapping);\n\n  const handleKeydown = useCallback(\n    (keydownEvent: KeyboardEvent) => {\n      const { key, target, repeat } = keydownEvent;\n      const lowerCaseKey = key.toLowerCase();\n\n      if (\n        repeat ||\n        blacklistedTargets.includes((target as HTMLElement).tagName.toLowerCase()) ||\n        !lowerCaseKeys.includes(lowerCaseKey)\n      ) {\n        return;\n      }\n\n      if (!keys[lowerCaseKey]) {\n        setKeys({ type: ActionType.Keydown, key: lowerCaseKey });\n      }\n    },\n    [keys, lowerCaseKeys],\n  );\n\n  const handleKeyup = useCallback(\n    (keyupEvent: KeyboardEvent) => {\n      const { key, target } = keyupEvent;\n      const lowerCaseKey = key.toLowerCase();\n\n      if (\n        blacklistedTargets.includes((target as HTMLElement).tagName.toLowerCase()) ||\n        !lowerCaseKeys.includes(lowerCaseKey)\n      ) {\n        return;\n      }\n\n      if (keys[lowerCaseKey]) {\n        setKeys({ type: ActionType.Keyup, key: lowerCaseKey });\n      }\n    },\n    [keys, lowerCaseKeys],\n  );\n\n  useEffect(() => {\n    if (Object.values(keys).every((value) => value)) {\n      callback(keys);\n      setKeys({ type: ActionType.Reset, payload: initialKeyMapping });\n    }\n  }, [callback, keys, initialKeyMapping]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeydown, true);\n    return () => window.removeEventListener('keydown', handleKeydown, true);\n  }, [handleKeydown]);\n\n  useEffect(() => {\n    window.addEventListener('keyup', handleKeyup, true);\n    return () => window.removeEventListener('keyup', handleKeyup, true);\n  }, [handleKeyup]);\n}\n\nfunction keysReducer(state: KeyMapping, action: Action): KeyMapping {\n  switch (action.type) {\n    case ActionType.Keydown: {\n      return produce(state, (draft) => {\n        if (action.key == null) {\n          throw new Error(`${action.type}: missing key`);\n        }\n\n        draft[action.key] = true;\n      });\n    }\n    case ActionType.Keyup: {\n      return produce(state, (draft) => {\n        if (action.key == null) {\n          throw new Error(`${action.type}: missing key`);\n        }\n\n        draft[action.key] = false;\n      });\n    }\n    case ActionType.Reset: {\n      if (action.payload == null) {\n        throw new Error(`${action.type}: missing payload`);\n      }\n\n      return { ...action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default useKeyboardShortcut;\n","import styled from 'styled-components/macro';\nimport InputMode from '../../../services/mode';\n\nconst Paragraph = styled.p`\n  position: absolute;\n  font-size: 1.44rem;\n  margin-top: 2rem;\n  left: 0;\n  right: 0;\n  color: #6b6b6b;\n  text-align: center;\n`;\n\nconst INFO_SHORTCUT_KEYS = 'Press `Shift + S` to search and `Shift + A` to create a new item.';\nconst INFO_CANCEL_SHORTCUT_KEY = 'Press `Esc` to cancel.';\n\nexport default function Info({ mode }: { mode: InputMode }): JSX.Element {\n  const message = mode === InputMode.None ? INFO_SHORTCUT_KEYS : INFO_CANCEL_SHORTCUT_KEY;\n\n  return <Paragraph>{message}</Paragraph>;\n}\n","import styled from 'styled-components/macro';\nimport { useTodoState } from '../../context/todo';\nimport TodoItem from './TodoItem';\nimport Header from './Header';\nimport Footer from './Footer';\nimport { filter, search } from '../../services/filter';\nimport InputToggle from './InputToggle';\nimport useTodoKeyboardShortcuts from './useTodoKeyboardShortcuts';\nimport Info from './Info';\n\nconst Section = styled.section`\n  background-color: #fff;\n  padding: 2rem 2rem 1rem 2rem;\n  border: 0.1rem solid #ddd;\n  border-radius: 0.2rem;\n  margin: 3rem auto;\n  min-width: 32rem;\n  max-width: 60rem;\n  position: relative;\n`;\n\nconst StyledList = styled.ul`\n  list-style-type: none;\n  padding-left: 0;\n`;\n\nconst Paragraph = styled.p`\n  margin: 1rem 0;\n  padding: 1rem;\n  border-radius: 0;\n  background: #f2f2f2;\n  border: 1px solid rgba(229, 229, 229, 0.5);\n  color: #888;\n`;\n\nexport default function TodoList(): JSX.Element {\n  const { items, filterMode, inputMode, query } = useTodoState();\n  const filteredItems = filter(search(items, query), filterMode);\n  const itemCount = filteredItems.length;\n\n  useTodoKeyboardShortcuts();\n\n  let listContent;\n  if (filteredItems.length === 0) {\n    listContent = <Paragraph>There are no items.</Paragraph>;\n  } else {\n    listContent = (\n      <StyledList data-testid=\"todo-list\">\n        {filteredItems.map((item) => (\n          <TodoItem key={item.id} data={item} />\n        ))}\n      </StyledList>\n    );\n  }\n\n  return (\n    <Section>\n      <>\n        <Header />\n        <InputToggle mode={inputMode} query={query} />\n\n        {listContent}\n\n        <Footer count={itemCount} filterMode={filterMode} inputMode={inputMode} />\n      </>\n      <Info mode={inputMode} />\n    </Section>\n  );\n}\n","import { Key } from 'ts-key-enum';\nimport { ActionType, useTodoDispatch } from '../../context/todo';\nimport useKeyboardShortcut from '../../hooks/useKeyboardShortcut';\nimport InputMode from '../../services/mode';\n\nexport default function useTodoKeyboardShortcuts(): void {\n  const dispatch = useTodoDispatch();\n  const createModeKeys = [Key.Shift, 'A'];\n  const searchModeKeys = [Key.Shift, 'S'];\n  const noInputModeKeys = [Key.Escape];\n\n  useKeyboardShortcut(createModeKeys, () =>\n    dispatch({ type: ActionType.ToggleMode, payload: InputMode.Add.toString() }),\n  );\n  useKeyboardShortcut(searchModeKeys, () =>\n    dispatch({ type: ActionType.ToggleMode, payload: InputMode.Search.toString() }),\n  );\n  useKeyboardShortcut(noInputModeKeys, () =>\n    dispatch({ type: ActionType.ToggleMode, payload: InputMode.None.toString() }),\n  );\n}\n","import { TodoProvider } from '../../context/todo';\nimport TodoList from '../TodoList';\n\nfunction App(): JSX.Element {\n  return (\n    <TodoProvider>\n      <TodoList />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","/* eslint-disable @typescript-eslint/no-floating-promises */\nimport type { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n/* eslint-enable @typescript-eslint/no-floating-promises */\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}